/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ue03_Messwerte.sx;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.net.SocketAddress;
import java.net.URL;
import java.util.Scanner;
import javax.swing.JOptionPane;


/**
 *
 * @author florian
 */
public class Messung extends javax.swing.JFrame
{
  private final MeasurementCollection mc = new MeasurementCollection();
 
 
   /**
    * Creates new form Messung
    */
  public Messung ()
  {
    initComponents();

    jTable.setModel(new TableModel(mc));
    setLocationRelativeTo(null);
  }
  


  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jtfServerHost = new javax.swing.JTextField();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTable = new javax.swing.JTable();
    jbuMeasure = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jtfServerHost.setText("http://127.0.0.1:4711");
    jtfServerHost.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jtfServerHostActionPerformed(evt);
      }
    });
    getContentPane().add(jtfServerHost, java.awt.BorderLayout.NORTH);

    jTable.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][]
      {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String []
      {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    jScrollPane1.setViewportView(jTable);

    getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

    jbuMeasure.setText("Messung");
    jbuMeasure.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbuMeasureActionPerformed(evt);
      }
    });
    getContentPane().add(jbuMeasure, java.awt.BorderLayout.PAGE_END);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jtfServerHostActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jtfServerHostActionPerformed
  {//GEN-HEADEREND:event_jtfServerHostActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_jtfServerHostActionPerformed

  private void jbuMeasureActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbuMeasureActionPerformed
  {//GEN-HEADEREND:event_jbuMeasureActionPerformed
        URL hostUrl;
    try
    {
      hostUrl = new URL(jtfServerHost.getText());
      SocketAddress add = new InetSocketAddress(
              hostUrl.getHost(),
              hostUrl.getPort());
      Socket socket = new Socket();
      socket.connect(add, 300);
      try (BufferedWriter bw
              = new BufferedWriter(
                      new OutputStreamWriter(
                              socket.getOutputStream())))
      {
        bw.write("GET\n");
        bw.flush();
        try (BufferedReader br
                = new BufferedReader(
                        new InputStreamReader(
                                socket.getInputStream())))
        {
          if (!br.ready())
          {
            Thread.sleep(200);
          }
          if (!br.ready())
          {
            throw new IOException("Missing response");
          }
          String response = br.readLine();
          if (response.isEmpty() || !response.endsWith("V"))
          {
            throw new IOException("wrong response (" + response + ")");
          }
          response = response.substring(0, response.length() - 1);
          double v = new Scanner(response).nextDouble();
          mc.add(new MeasurementItem(socket.toString(), v));
 
        }
      }
    }
    catch (Exception ex)
    {
      ex.printStackTrace(System.err);
      JOptionPane.showMessageDialog(this, ex.getClass().getSimpleName(), "Fehler aufgetreten...", JOptionPane.ERROR_MESSAGE);
    }
 
  }//GEN-LAST:event_jbuMeasureActionPerformed


  /**
   * @param args the command line arguments
   */
  public static void main (String args[])
  {
    /*
     * Set the Nimbus look and feel
     */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(Messung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(Messung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(Messung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(Messung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /*
     * Create and display the form
     */
    java.awt.EventQueue.invokeLater(new Runnable()
    {
      public void run ()
      {
        new Messung().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable jTable;
  private javax.swing.JButton jbuMeasure;
  private javax.swing.JTextField jtfServerHost;
  // End of variables declaration//GEN-END:variables

}
