/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ue03_Messwerte;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.concurrent.CancellationException;
import javax.swing.SwingWorker;


/**
 *
 * @author florian
 */
public class Server_GUI extends javax.swing.JFrame
{
  private SW sw;
  /**
   * Creates new form Server_GUI
   */
  public Server_GUI ()
  {
    initComponents();  
  }
  
  private class SW extends SwingWorker<Object, Object>
  {
    private final double d;
    
    
    public SW (double d)
    {
      this.d=d;
    }
    
    @Override
    protected Object doInBackground () throws Exception
    {
      ServerSocket ss = null;
      Socket socket = null;
      
      while(!isCancelled())
      {
        try
        {
          ss=new ServerSocket(4711);

          System.out.println("Server auf Port "+4711+" ge√∂ffnet");

          socket=ss.accept();
          System.out.println("Verbindung hergestellt mit "+socket);

          try(BufferedReader br=new BufferedReader(new InputStreamReader(socket.getInputStream())))
          {
            Thread.sleep(50);
            String response=br.readLine();
            if((response.equals("GET")))
            {
              try(BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())))
              {
                bw.write(String.format("%.1fV\n", d));
              }
            }
            else
            {
              System.out.println("Connection closed; wrong Request: "+response);
              socket.close();
            }
          }
        }
        finally
        {
          if(!(ss==null))
            ss.close();
          if(!(socket==null))
            socket.close();
        }
      }
      return null;
    }


    @Override
    protected void done ()
    {
      try
      {
        get();
      }
      catch(CancellationException ex)
      {
        System.out.println("Thread Cancelled");
      }
      catch(Exception ex)
      {
        ex.printStackTrace(System.err);
      }
      finally
      {
        System.out.println("Server Closed");
        sw=null;
        jButton1.setText("Start Server");
      }
    }
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jSlider1 = new javax.swing.JSlider();
    jTextField1 = new javax.swing.JTextField();
    jPanel1 = new javax.swing.JPanel();
    jButton1 = new javax.swing.JButton();
    jButton2 = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    getContentPane().add(jSlider1, java.awt.BorderLayout.CENTER);

    jTextField1.setText("1.1");
    jTextField1.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jTextField1ActionPerformed(evt);
      }
    });
    getContentPane().add(jTextField1, java.awt.BorderLayout.PAGE_START);

    jPanel1.setLayout(new java.awt.GridLayout());

    jButton1.setText("Start Server");
    jButton1.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButton1ActionPerformed(evt);
      }
    });
    jPanel1.add(jButton1);

    jButton2.setText("Beenden");
    jButton2.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jButton2ActionPerformed(evt);
      }
    });
    jPanel1.add(jButton2);

    getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextField1ActionPerformed
  {//GEN-HEADEREND:event_jTextField1ActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_jTextField1ActionPerformed

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
  {//GEN-HEADEREND:event_jButton1ActionPerformed
    if(sw==null)
    {
      jButton1.setText("Close Server");
      sw=new SW(Double.parseDouble(jTextField1.getText()));
      sw.execute();
    }
    else
    {
      sw.cancel(true);
    }
    
  }//GEN-LAST:event_jButton1ActionPerformed

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
  {//GEN-HEADEREND:event_jButton2ActionPerformed
    if(sw!=null)
      sw.cancel(true);
    dispose();
  }//GEN-LAST:event_jButton2ActionPerformed


  /**
   * @param args the command line arguments
   */
  public static void main (String args[])
  {
    /*
     * Set the Nimbus look and feel
     */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(Server_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(Server_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(Server_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(Server_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /*
     * Create and display the form
     */
    java.awt.EventQueue.invokeLater(new Runnable()
    {
      public void run ()
      {
        new Server_GUI().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JSlider jSlider1;
  private javax.swing.JTextField jTextField1;
  // End of variables declaration//GEN-END:variables

}
